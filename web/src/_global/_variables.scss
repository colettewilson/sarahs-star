/* Grid Widths */

$maxWidth: 1400px;
$gridGutter: 16px;

@mixin gridWidth {
  max-width: $maxWidth;
  margin-right: auto;
  margin-left: auto;
}

@mixin gridPadding {
  padding-right: $gridGutter;
  padding-left: $gridGutter;

  @include breakpoint(large up) {
    padding-right: $gridGutter * 2;
    padding-left: $gridGutter * 2;
  }
}

/* Breakpoints */

$breakpoints: (
  xsmall: 0,
  small: 420px,
  medium: 740px,
  large: 1024px,
  xlarge: 1200px,
  xxlarge: 1400px,
);

@mixin breakpoint($breakpoint) {
  $bp: nth($breakpoint, 1);
  $max: 0;
  $dir: nth($breakpoint, 2);
  $query: "only screen";

  @if map-has-key($breakpoints, $bp) {
    $min: map-get($breakpoints, $bp);
    $nextIndex: index($breakpoints, $bp $min) + 1;
    $next: if(
      $nextIndex > length($breakpoints),
      null,
      nth($breakpoints, $nextIndex)
    );

    @if $dir == "only" {
      $query: $query + " and (min-width: #{$min})";

      @if $next == null {
        $max: null;
      } @else {
        $max: nth($next, 2) - calc(1 / 16);
        $query: $query + " and (max-width: #{$max})";
      }
    } @else if $dir == "up" {
      $query: $query + " and (min-width: #{$min})";
    } @else if $dir == "down" {
      $max: nth($next, 2) - calc(1 / 16);
      $query: $query + " and (max-width: #{$max})";
    }

    @media #{$query} {
      @content;
    }
  }
}

/*  
  Apply a custom font with fallbacks while loading - avoids FOIT.
  @prop {String|List} $font - Custom font name(s) as specified in fonts.coffee.
  @prop {String|List} $fallbacks - Fallback font name(s) to use until custom fonts load. Should
  end with a generic family without quotes, e.g. sans-serif.
  @see https://www.filamentgroup.com/lab/font-events.html.
*/
@mixin font-family($font, $fallbacks) {
  font-family: $font, $fallbacks;

  .fonts-loading & {
    font-family: $fallbacks;
  }
}

/* Fonts */

$fallbacks: Helvetica Neue, Helvetica, Arial, sans-serif;

@mixin font-nunito($weight: 300, $style: normal) {
  @include font-family("Nunito Sans", $fallbacks);
  font-style: $style;
  font-weight: $weight;
  font-display: swap;
}

@mixin font-smoothing($value: on) {
  @if $value == on {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  } @else {
    -moz-osx-font-smoothing: auto;
    -webkit-font-smoothing: subpixel-antialiased;
  }
}

/* Typography */

@mixin title {
  @include font-nunito(700);
  line-height: 1.1;

  span {
    color: var(--primary-color);
  }
}

@mixin h1 {
  @include title;
  font-size: 42px;

  @include breakpoint(medium up) {
    font-size: 54px;
  }

  @include breakpoint(xlarge up) {
    font-size: 72px;
  }
}

@mixin h2 {
  @include title;
  font-size: 28px;

  @include breakpoint(medium up) {
    font-size: 32px;
  }
}

@mixin h3 {
  @include title;
  @include font-nunito(400);
  font-size: 20px;

  @include breakpoint(medium up) {
    font-size: 24px;
  }
}

@mixin h4 {
  @include title;
  font-size: 18px;

  @include breakpoint(medium up) {
    font-size: 20px;
  }
}

@mixin lead {
  @include font-nunito(300, italic);
  font-size: 18px;
  letter-spacing: 0.03em;
  line-height: 1.3;

  @include breakpoint(medium up) {
    font-size: 24px;
  }
}

@mixin small {
  @include font-nunito;
  font-size: 12px;
  letter-spacing: 0.03em;
  line-height: 1.3;

  @include breakpoint(medium up) {
    font-size: 14px;
  }
}

@mixin body {
  @include font-nunito;
  font-size: 16px;
  line-height: 1.5;

  @include breakpoint(medium up) {
    font-size: 18px;
  }
}

@mixin theme-intro {
  text-align: center;

  h2 {
    @include h2;
    margin-bottom: block(medium);
    text-transform: uppercase;
  }

  [class*="portableText"] {
    @include font-nunito(400);
    font-size: 1.325rem;
    margin-bottom: block(medium);
  }
}

/* Colors */

$colors: (/* Brand colours */ /* Tones */);

@function color($color) {
  @return map-get($colors, $color);
}

/* Layout */

@mixin hideScrollbars {
  scrollbar-width: none;
  /* sass-lint:disable no-vendor-prefixes */
  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin bgImg {
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin visuallyHidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap; /* added line */
}

/* Block Sizings */

$blocks: (
  4xlarge: 9rem,
  3xlarge: 7rem,
  2xlarge: 5rem,
  xlarge: 4rem,
  large: 3rem,
  medium: 2rem,
  small: 0.5rem,
  gutter: 1rem,
);

@function block($block) {
  @return map-get($blocks, $block);
}

/* Animation */

@mixin transition($props, $ease: ease, $duration: 250ms) {
  transition-duration: $duration;
  transition-property: $props;
  transition-timing-function: $ease;
}

/* Theme */

@mixin section {
  padding-top: block(large);
  padding-bottom: block(large);

  @include breakpoint(medium up) {
    padding-top: block(2xlarge);
    padding-bottom: block(2xlarge);
  }
}

@mixin blockSection {
  padding-top: block(medium);
  padding-bottom: block(medium);

  @include breakpoint(medium up) {
    padding-top: block(large);
    padding-bottom: block(large);
  }
}

@mixin button {
  @include transition((color, background, border));
  @include font-nunito(700);
  display: inline-block;
  min-width: 128px;
  padding: 12px 18px;
  font-size: 16px;
  text-align: center;
  text-transform: uppercase;
  border-radius: 32px;
  cursor: pointer;

  &[data-style="primary"] {
    background-color: var(--brand-1-color);
    border: 2px solid var(--brand-1-color);
  }

  &[data-style="secondary"] {
    background-color: var(--brand-2-color);
    border: 2px solid var(--brand-2-color);
  }

  &[data-style="ghost"] {
    border: 2px solid var(--primary-color);
  }

  &:hover {
    background-color: white;
    border: 2px solid;
  }

  &[data-style="ghost"]:hover {
    color: white;
    background-color: var(--primary-color);
    border: 2px solid var(--primary-color);
  }

  &:focus-visible {
    outline: dashed 2px var(--primary-color);
    outline-offset: 4px;
  }
}

@mixin inline-link {
  @include transition(color);
  display: inline-block;
  position: relative;
  font-weight: bold;

  &::after {
    @include transition(background-color);
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: currentColor;
  }

  &:hover {
    color: var(--brand-1-color);
  }
}

@mixin theme-link {
  @include font-nunito(600);
  @include transition(color);
  display: flex;
  font-size: 1.25rem;
  text-decoration: none;
  align-items: center;

  svg {
    @include transition(transform);
    width: 18px;
    margin-left: 8px;
    margin-bottom: -2px;
    color: var(--brand-1-color);
  }

  &:hover,
  &:focus-visible {
    color: var(--brand-1-color);
  }

  &:hover svg,
  &:focus-visible svg {
    transform: translateX(4px);
  }
}

@mixin card-link {
  @for $i from 1 through 3 {
    &[data-style="brand-#{$i}"] {
      > span {
        background-color: var(--brand-#{$i}-color);
      }
    }
  }

  > span {
    @include transition(transform);
    position: absolute;
  }

  > span:first-child,
  > span:nth-child(3) {
    top: 0;
    width: 4px;
    height: 100%;
    transform: scaleY(0);
    transform-origin: 0 100%;
  }

  > span:first-child {
    left: 0;
    transform-origin: 0 0;
  }

  > span:nth-child(3) {
    right: 0;
  }

  > span:nth-child(2),
  > span:nth-child(4) {
    left: 0;
    width: 100%;
    height: 4px;
    transform: scaleX(0);
  }

  > span:nth-child(2) {
    top: 0;
    transform-origin: 100% 0;
  }

  > span:nth-child(4) {
    bottom: 0;
    transform-origin: 0 0;
  }

  &:hover > span {
    transform: scale(1);
  }
}
